                <!-- 个人资料 -->
                <div class="col-sm-9">
                    
                    <!-- username -->
                    <div class="d-flex align-items-center justify-content-sm-between">
                        <h2 class="mb-3 font-weight-normal">{{user.username||user.name}}</h2>
                    </div>
                    <!-- Member since -->
                    <h6 class="mb-3 font-weight-normal">
                        <i class="fa fa-user-o mr-2"></i>Member since：{{user.member_since ? $moment(user.member_since).format("YYYY-MM-DD HH:mm") : ""}}
                    </h6>
                    <h6 class="mb-3 font-weight-normal">
                        <i class="fa fa-clock-o mr-2"></i>Last seen：{{user.last_seen ? $moment(user.last_seen).fromNow():""}}</h6>
                    <h6 class="mb-3 font-weight-normal">
                        <i class="fa fa-address-card-o mr-2"></i>verified User：{{user.email}}
                    </h6>
                    <h6 class="mb-3 font-weight-normal"><i class="fa fa-map-marker mr-2"></i>{{user.location}}</h6>

                    <hr>
                    <!-- about me -->
                    <p class="lead">{{ user.about_me }}</p>
                </div>
								
								
								
{name:'User',params:{id:shareState.user_id}}




          <!-- -------------Pagination-------------- -->
            <nav>
                <ul class="pagination">
                    <!-- 
                        （？）如何实现到达第一页时，上一页按钮灰掉 
                            答：'disabled':posts._meta.page<=1?true:false
                                注意一定要用三元运算符指定true或者false，只写<=1是不对的
                    -->
                    <li v-bind:class="{'page-item':true,'disabled':posts._meta.page<=1?true:false}">
                        <router-link 
                        :to="{name:'Home',query:{page:posts._meta.page-1 , per_page:posts._meta.per_page}}" 
                        class="page-link" >
                            &laquo;
                        </router-link>
                    </li>
                    <!-- 
                        （？）分页怎么让点击的页码突出色显示？
                            1.路由的page（点击的）和当前page（显示的）比较
                            2.如果是从主页进入（即没有路由query），并且页码是1的按钮亮起来。
                     -->
                    <li v-bind:class="{'page-item':1,'active':$route.query.page==page || (!$route.query.page && page==1)}" v-for="(page,index) in iter_pages" v-bind:key="index">
                        
                        <router-link v-if="page!='NaN'" :to="{name:'Home',query:{page:page,per_page:posts._meta.per_page}}" class="page-link">{{page}}</router-link>
                        <span class="list-inline-item h-100 ml-2 mr-2 text-secondary" v-else style="line-height:3.5em;">...</span>
                        
                    </li>


                    <li v-bind:class="{'page-item':true,'disabled':posts._meta.page>=posts._meta.total_pages?true:false}">
                        <router-link 
                        :to="{name:'Home',query:{page:posts._meta.page+1 , per_page:posts._meta.per_page}}" 
                        class="page-link" >
                            &raquo;
                        </router-link>
                    </li>
                </ul>
            </nav>







post列表
--------------------------------------------------------------------
<template>
    <div class="container">        
        <div class="row mt-4">
            <!-- Article Content -->
            <div class="col-md-9">
                <article class="">
                    <!-- 标题 -->
                    <header class="mb-3">
                        <div class="h1 text-info text-break mb-3">{{post.title}}</div>
                        <ul class="mb-3 d-sm-flex list-inline text-secondary">
                            <li class="list-inline-item">{{post.author.username||post.author.name}}</li>
                            <li class="list-inline-item">/</li>
                            <li class="list-inline-item"><i class="fa fa-clock-o mr-1"></i>{{$moment(post.timestamp).format('YYYY/MM/DD HH:mm:ss')}}</li>
                            <li class="list-inline-item">/</li>
                            <li class="list-inline-item">Comment(0)</li>
                            <li class="list-inline-item ml-auto">
                                <i class="fa fa-eye text-muted mr-1"></i>{{post.views}}次阅读
                            </li>
                            
                        </ul>
                        <hr>
                    </header>
                    <vue-markdown
                        :source="post.body"
                        toc
                        :toc-first-level="1"
                        :toc-last-level="3"
                        toc-id="toc"
                        @toc-rendered="tocAlready"
                        class="markdown-body text-break text-wrap">
                    </vue-markdown>
                </article> 
            </div>  <!-- End Article Content -->

            <!-- TOC -->
            <div class="col-md-3">
                <div id="sticker">
                    <div id="tocHeader" >
                        <div class="h5 text-secondary">文章目录</div>
                    </div>
                    <div id="toc" class="toc"></div>

                </div>
            </div><!-- End TOC -->
            
        </div>
    </div>
</template>

<script>
import store from '../../store.js'
import VueMarkdown from 'vue-markdown'
import '../../assets/jquery.sticky'
import hljs from 'highlight.js'
import 'highlight.js/styles/github.css'
const highlightCode = () => {
  let blocks = document.querySelectorAll('pre code');
  blocks.forEach((block)=>{
    hljs.highlightBlock(block)
  })
}
export default {
    data(){
        return {
            sharestate:store.state,
            post: {
                author:{
                    username:''
                },
                body:'',
                summary:'',
                title:'',
                views:0
            }
        }
    },
    components:{
        VueMarkdown
    },
    methods:{
        tocAlready(){
            $("#sticker").sticky({topSpacing:10});
        },
        _getPost(postid){
            
            let path = `/posts/${postid}`
            this.$axios.get(path)
            .then(res=>{
                this.post = res.data
                console.log(res)
            }).catch(e=>{
                console.log(e)
                this.$toasted.error("404")
            })
        }
    },
    created:function(){
        const postid = this.$route.params.id
        this._getPost(postid)
    },
    beforeRouteUpdate(to,from,next){
        this._getPost(to.params.id)
        next()
    },
    mounted () {
        highlightCode()
    },
    updated () {
        highlightCode()
    }
}
</script>

<style>
.toc {
    font-size: 0.9em;
}
.toc ul {
    list-style-type: none;
}
.toc > ul{
    padding-left: 0;
}
.toc > ul > li > ul {
    padding-left: 1em;
}
.toc > ul > li > ul > li > ul {
    padding-left: 1.2em;    
}

</style>




delPostid = post.id